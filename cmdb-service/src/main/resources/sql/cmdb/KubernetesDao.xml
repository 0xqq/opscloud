<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sdg.cmdb.dao.cmdb.KubernetesDao">

    <insert id="addCluster" parameterType="KubernetesClusterDO" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO oc_kubernetes_cluster (
        name,
        description,
        env,
        masterUrl,
        kubeconfigFile,
        namespace,
        serverGroupId,
        serverGroupName
        ) VALUES (
        #{name},
        #{description},
        #{env},
        #{masterUrl},
        #{kubeconfigFile},
        #{namespace},
        #{serverGroupId},
        #{serverGroupName}
        );
    </insert>

    <delete id="delCluster" parameterType="_long">
        DELETE FROM oc_kubernetes_cluster WHERE id = #{id}
    </delete>

    <select id="queryCluster" resultType="KubernetesClusterDO">
        SELECT * FROM oc_kubernetes_cluster
    </select>

    <select id="queryClusterByEnv" parameterType="_int" resultType="KubernetesClusterDO">
        SELECT * FROM oc_kubernetes_cluster
        WHERE env = #{env}
        LIMIT 1
    </select>

    <select id="getClusterByName" parameterType="string" resultType="KubernetesClusterDO">
        SELECT * FROM oc_kubernetes_cluster WHERE name = #{name}
    </select>

    <select id="getCluster" parameterType="_long" resultType="KubernetesClusterDO">
        SELECT * FROM oc_kubernetes_cluster WHERE id = #{id}
    </select>

    <update id="updateCluster" parameterType="KubernetesClusterDO">
        UPDATE oc_kubernetes_cluster
        SET name = #{name},
        description = #{description},
        env = #{env},
        masterUrl = #{masterUrl},
        kubeconfigFile = #{kubeconfigFile},
        namespace = #{namespace},
        serverGroupId = #{serverGroupId},
        serverGroupName = #{serverGroupName}
        WHERE id = #{id}
    </update>

    <insert id="addNamespace" parameterType="KubernetesNamespaceDO" useGeneratedKeys="true" keyColumn="id"
            keyProperty="id">
        INSERT INTO oc_kubernetes_namespace (
        clusterId,
        namespace
        ) VALUES (
        #{clusterId},
        #{namespace}
        );
    </insert>

    <delete id="delNamespace" parameterType="_long">
        DELETE FROM oc_kubernetes_namespace WHERE id = #{id}
    </delete>

    <update id="updateNamespace" parameterType="KubernetesNamespaceDO">
        UPDATE oc_kubernetes_namespace
        SET namespace = #{namespace}
        WHERE id = #{id}
    </update>

    <select id="queryNamespaceByClusterId" resultType="KubernetesNamespaceDO">
        SELECT * FROM oc_kubernetes_namespace
        WHERE clusterId = #{clusterId}
    </select>

    <select id="queryNamespace" resultType="KubernetesNamespaceDO">
        SELECT * FROM oc_kubernetes_namespace
    </select>

    <select id="getNamespace" parameterType="KubernetesNamespaceDO" resultType="KubernetesNamespaceDO">
        SELECT * FROM oc_kubernetes_namespace
        WHERE clusterId = #{clusterId} AND namespace = #{namespace}
    </select>

    <select id="getNamespaceById" parameterType="_long" resultType="KubernetesNamespaceDO">
        SELECT * FROM oc_kubernetes_namespace
        WHERE id = #{id}
    </select>

    <insert id="addService" parameterType="KubernetesServiceDO" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO oc_kubernetes_service (
        namespaceId,
        name,
        appName,
        serviceType,
        clusterIP,
        serverGroupId,
        serverGroupName
        ) VALUES (
        #{namespaceId},
        #{name},
        #{appName},
        #{serviceType},
        #{clusterIP},
        #{serverGroupId},
        #{serverGroupName}
        );
    </insert>

    <delete id="delService" parameterType="_long">
        DELETE FROM oc_kubernetes_service WHERE id = #{id}
    </delete>

    <update id="updateService" parameterType="KubernetesServiceDO">
        UPDATE oc_kubernetes_service
        SET namespaceId = #{namespaceId},
        name = #{name},
        appName = #{appName},
        serviceType = #{serviceType},
        clusterIP = #{clusterIP},
        serverGroupId = #{serverGroupId},
        serverGroupName = #{serverGroupName}
        WHERE id = #{id}
    </update>

    <select id="getServiceSize" parameterType="object" resultType="_int">
        SELECT COUNT(*) FROM oc_kubernetes_service
        <where>
            <if test="namespaceId != -1">
                namespaceId = #{namespaceId}
            </if>
            <if test="name != null and name != ''">
                AND name like "%" #{name} "%"
            </if>
            <if test="portName != null and portName != ''">
                AND id IN( SELECT serviceId FROM oc_kubernetes_service_port WHERE name = #{portName} )
            </if>
        </where>
    </select>

    <select id="queryServicePage" parameterType="object" resultType="KubernetesServiceDO">
        SELECT * FROM oc_kubernetes_service
        <where>
            <if test="namespaceId != -1">
                namespaceId = #{namespaceId}
            </if>
            <if test="name != null and name != ''">
                AND name like "%" #{name} "%"
            </if>
            <if test="portName != null and portName != ''">
                AND id IN( SELECT serviceId FROM oc_kubernetes_service_port WHERE name = #{portName} )
            </if>
        </where>
        ORDER BY name DESC,gmtCreate DESC
        limit #{pageStart}, #{pageLength}
    </select>

    <select id="getServiceByAppName" parameterType="string" resultType="KubernetesServiceDO">
        SELECT * FROM oc_kubernetes_service
        WHERE appName = #{appName}
        LIMIT 1
    </select>

    <select id="getService" parameterType="KubernetesServiceDO" resultType="KubernetesServiceDO">
        SELECT * FROM oc_kubernetes_service
        WHERE namespaceId = #{namespaceId} AND name = #{name}
    </select>

    <select id="getServiceById" parameterType="_long" resultType="KubernetesServiceDO">
        SELECT * FROM oc_kubernetes_service
        WHERE id = #{id}
    </select>

    <select id="queryServiceByPort" parameterType="object" resultType="KubernetesServiceVO">
       SELECT service.*, port.name AS portName , port.nodePort
       FROM oc_kubernetes_service AS service LEFT JOIN oc_kubernetes_service_port port ON port.serviceId = service.id AND port.name = #{portName}
       WHERE namespaceId = #{namespaceId} AND serverGroupId = #{serverGroupId}
       LIMIT 1
    </select>

    <insert id="addPort" parameterType="KubernetesServicePortDO" useGeneratedKeys="true" keyColumn="id"
            keyProperty="id">
        INSERT INTO oc_kubernetes_service_port (
        serviceId,
        name,
        nodePort,
        port,
        targetPort,
        protocol
        ) VALUES (
        #{serviceId},
        #{name},
        #{nodePort},
        #{port},
        #{targetPort},
        #{protocol}
        );
    </insert>

    <delete id="delPort" parameterType="_long">
        DELETE FROM oc_kubernetes_service_port WHERE id = #{id}
    </delete>

    <update id="updatePort" parameterType="KubernetesServicePortDO">
        UPDATE oc_kubernetes_service_port
        SET name = #{name},
        nodePort = #{nodePort},
        port = #{port},
        targetPort = #{targetPort},
        protocol = #{protocol}
        WHERE id = #{id}
    </update>

    <select id="queryServicePortByServiceId" parameterType="_long" resultType="KubernetesServicePortDO">
        SELECT * FROM oc_kubernetes_service_port
        WHERE serviceId = #{serviceId}
    </select>

</mapper>